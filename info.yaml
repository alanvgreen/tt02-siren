--- 
# TinyTapeout project information
project:
  wokwi_id:    348242239268323922        # If using wokwi, set this to your project's ID
#  source_files:        # If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. Source files must be in ./src
#    - counter.v
#    - decoder.v
#  top_module:  "seven_segment_seconds"      # put the name of your top module here, make it unique by prepending your github username

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it.
#
# Here is an example: https://github.com/mattvenn/tinytapeout_m_segments/blob/main/info.yaml
#
# This info will be automatically collected and used to make a datasheet for the chip.
documentation: 
  author:       "Alan Green"      # Your name
  discord:      "AlanGreen#3623"  # Your discord handle
  title:        "Siren"           # Project title
  description:  "An annoying two-tone siren straight from the 1970s"      # Short description of what your project does
  how_it_works: >
    A long chain of D flip flops divides down the clock to produce square waves of 
    various frequencies. Some of the higher frequencies are used to produce the tones
    while the lower frequencies are used to produce timing control signals, to vary
    the tone.
  how_to_test: >
    Because there are no inputs, testing this is simply a matter of connecting a 
    speaker to digital output 7, and standing back.
  external_hw: >
    For the audio output on pin 7, either use an audio amplifier or, if bravely
    connecting a speaker directly, place a resistor in series to limit the current.
  language:     "wokwi" # other examples include Verilog, Amaranth, VHDL, etc
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     12500       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
  inputs:               # a description of what the inputs do
    - clock
    - none
    - none
    - none
    - none
    - none
    - none
    - none
  outputs:
    - segment a         # a description of what the outputs do
    - segment b
    - segment c
    - segment d
    - segment e
    - segment f
    - segment g
    - none

